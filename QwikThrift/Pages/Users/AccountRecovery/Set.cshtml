@page
@model QwikThrift.Pages.Users.AccountRecovery.SetModel

@{
    ViewData["Title"] = "Set";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Set</h1>

<h4>UserSecurityQuestion</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" enctype="multipart/form-data">
            @for(int i = 0; i < Model.UserSecurityQuestions.Count; ++i)
            {
                <input asp-for="UserSecurityQuestions[i].UserId" hidden />
                <input id="UserSecurityQuestions[i]-@i" hidden/>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="UserSecurityQuestions[i].Question" class="control-label"></label>
                    <select asp-for="UserSecurityQuestions[i].Question" asp-items="@Model.UserSecurityQuestions[i].Questions" class="form-control question-@i">
                        <option value="" selected disabled hidden> --- Please Make A Selection --- </option>
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for="UserSecurityQuestions[i].Answer" class="control-label"></label>
                    <input asp-for="UserSecurityQuestions[i].Answer" class="form-control" />
                    <span asp-validation-for="UserSecurityQuestions[i].Answer" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="/Index">Back to Home</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        var question0;
        var question1;
        var question2;

        $('.question-0').on("change", function () {
            let question = $('.question-0').val();

            if (question0 !== question) {
                clearLock(question0);
                question0 = question;
            }

            let questionOptions = $('.question-1').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }

            questionOptions = $('.question-2').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }
        });

        $('.question-1').on("change", function () {
            let question = $('.question-1').val();

            if (question1 !== question) {
                clearLock(question1);
                question1 = question;
            }

            let questionOptions = $('.question-0').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }

            questionOptions = $('.question-2').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }
        });

        $('.question-2').on("change", function () {
            let question = $('.question-2').val();
            
            if (question2 !== question) {
                clearLock(question2);
                question2 = question;
            }

            let questionOptions = $('.question-1').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }

            questionOptions = $('.question-0').children();
            for (let i = 0; i < questionOptions.length; ++i) {
                if (questionOptions[i].innerText === question) {
                    $(questionOptions[i]).prop("disabled", true).prop("hidden", true);
                    break;
                }
            }
        });

        function clearLock(question) {
            let options = $('option');
            for (let i = 0; i < options.length; ++i) { 
                if (options[i].innerText === question) { 
                    $(options[i]).prop("disabled", false).prop("hidden", false);
                }
            }
        }
    </script>
}
